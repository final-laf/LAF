<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.laf.member.model.mapper.MemberMapper">
    
     <!-- 로그인 -->
     <select id="login" resultType="Member">
	  SELECT *
	  FROM `member`
	  WHERE MEMBER_DEL_FL = 'N'
	  AND MEMBER_ID = #{memberId}
     </select>
     
     	<!-- 회원 가입(SQL 수정 필요, 동적 SQL 사용해야) -->	
  	<insert id="signUp">
  		INSERT INTO `member`
		VALUES (NULL, 					<!--회원 번호-->
				#{memberId}, 			<!--회원 아이디-->
				#{memberPw}, 			<!--비밀번호-->
				#{memberName}, 			<!--회원 이름-->
				<!--성별-->
				<!--성별이 없으면-->
				<if test='memberGender == "n"'> NULL, </if>
				<!--성별이 있으면-->
				<if test='memberGender != "n"'> #{memberGender}, </if>
				#{memberEmail}, 		<!--이메일-->
				#{memberPhone}, 		<!--전화번호-->
				<!--생일-->
				<!--생일이 없으면-->
				<if test='memberBirth == null'> NULL, </if>
				<!--성별이 있으면-->
				<if test='memberBirth != null'> #{memberBirth}, </if>
				#{memberAddress},		<!--회원주소-->
				'B', 					<!--회원 등급-->
				DEFAULT, 				<!--가입일-->
				DEFAULT, 				<!--회원 탈퇴여부-->
				NULL, 					<!--탈퇴일-->
				NULL, 					<!--회원 소셜 가입-->
				DEFAULT, 				<!--회원 적립금-->
				DEFAULT, 				<!--회원 누적 구매액-->
				DEFAULT, 				<!--비회원 여부-->
				<!--환불 예금주-->
				<!--환불 예금주가 없으면-->
				<if test='refundName == null'> NULL, </if>
				<!--환불 예금주가 있으면-->
				<if test='refundName != null'> #{refundName}, </if>
				<!--환불 은행-->
				<!--환불 은행이 없으면-->
				<if test='refundBank == 0'> NULL, </if>
				<!--환불 은행이 있으면-->
				<if test='refundBank != 0'> #{refundBank}, </if>
				<!--환불 계좌번호-->
				<!--환불 계좌번호가 없으면-->
				<if test='refundAccount == null'> NULL) </if>
				<!--환불 계좌번호가 있으면-->
				<if test='refundAccount != null'> #{refundAccount}) </if>
  	</insert>
  	
  	
  	<!--아이디 중복 검사-->
  	<select id="checkId" resultType="_int">
		SELECT COUNT(*) FROM `member`
		WHERE member_id  = #{memberId}
		AND member_del_fl  = 'N'
	</select>
  	
  	
  	<!--이메일 중복 검사-->
  	<select id="checkEmail" resultType="_int">
		SELECT COUNT(*) FROM `member`
		WHERE member_email  = #{memberEmail}
		AND member_del_fl  = 'N'
	</select>
	
	<!--아이디, 이메일주소로 회원 검색(로그인-비밀번호 찾기)-->
  	<select id="selectMatch" resultType="Member">
		select * 
		from `member`
		where member_email = #{memberEmail}
		and member_id = #{memberId}
	</select>
	
	<!--아이디, 이메일주소로 새로 생성한 비밀번호 업데이트(로그인-비밀번호 찾기)-->
  	<update id="findPw">
		update `member`
		set member_pw = #{encPw}
		where member_email = #{memberEmail}
		and member_id = #{memberId}
	</update>
	
	<!--전화번호, 주문번호로 비회원 주문 조회(로그인-비회원 주문조회)-->
	<select id="selectNotMemberOrder" resultType="_int">
		SELECT order_no
		FROM `order` 
		LEFT JOIN `member` USING (member_no)
		WHERE member_phone = #{memberPhone}
		AND order_uno = #{orderUno}
	</select>
	
	<!--전체 회원의 수 조회(관리자-회원관리)-->
	<select id="getAllMemberCount" resultType="_int">
		SELECT count(*) FROM `member`
		WHERE member_not = "N"
		<if test="qk != null and qk.equals('all')">AND (member_name LIKE '%${query}%' OR member_id LIKE '%${query}%' OR member_email LIKE '%${query}%') </if>
		<if test="qk != null and qk.equals('name')"> AND member_name LIKE '%${query}%' </if>
		<if test="qk != null and qk.equals('id')"> AND member_id LIKE '%${query}%'</if>
		<if test="qk != null and qk.equals('email')"> AND member_email LIKE '%${query}%' </if>
	</select>
	
	<!--전체 회원 조회(관리자-회원관리)-->
	<select id="selectAllMemberList" resultType="Member">
		SELECT member_no, member_id, member_name, member_email, member_grade, member_del_fl, member_point, member_enroll_date 
		FROM `member`
		WHERE member_not = "N"
		<if test="qk != null and qk.equals('all')">AND (member_name LIKE '%${query}%' OR member_id LIKE '%${query}%' OR member_email LIKE '%${query}%') </if>
		<if test="qk != null and qk.equals('name')"> AND member_name LIKE '%${query}%' </if>
		<if test="qk != null and qk.equals('id')"> AND member_id LIKE '%${query}%'</if>
		<if test="qk != null and qk.equals('email')"> AND member_email LIKE '%${query}%' </if>
		ORDER BY member_enroll_date DESC
	</select>
	
	<!--회원번호로 회원 정보 조회(관리자-회원관리-회원관리상세. 비동기)-->
  	<select id="selectMemberDetail" resultType="Member">
		SELECT member_no, member_name, member_social, DATE_FORMAT(member_enroll_date, "%Y-%m-%d") member_enroll_date, 
	 		   member_del_fl, member_grade, member_id, DATE_FORMAT(member_birth, "%Y-%m-%d") member_birth, member_address
		FROM `member`
		WHERE member_no = #{memberNo};
	</select>
	
	<!--회원번호로 회원 기본배송지 조회(관리자-회원관리-회원관리상세. 비동기)-->
	<select id="selectMemberDetailDefaultAddress">
		SELECT address FROM `address`
		WHERE address_default_fl = "Y"
		AND member_no = #{memberNo}
	</select>
	
	<!--회원번호로 주문 개수 조회(관리자-회원관리-회원상세, 비동기)-->
	<select id="getOrderListCount" resultType="_int">
		SELECT count(*) FROM `order` WHERE member_no = #{memberNo}
	</select>
	
	
	<!--회원번호로 페이지리스트가 적용된 주문 조회(관리자-회원관리-회원상세, 비동기)-->
	<select id="selectAllOrderList">
		SELECT order_no, DATE_FORMAT(order_date, "%Y-%m-%d") order_date ,order_uno, order_total_price, order_payment, order_state
		FROM `order` WHERE member_no = #{memberNo}
	</select>

	
</mapper>

