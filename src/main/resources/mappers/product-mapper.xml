<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.laf.product.model.mapper.ProductMapper">

	<!-- 모든 상품 목록 조회 + 검색 -->
	<select id="selectProductList" resultType="Product">
		SELECT `product`.product_no,
				product_name,
				product_price,
				product_sale_price,
				product_sale,
				product_point,
				product_state,
				DATE_FORMAT(product_date, '%Y-%m-%d') AS product_date,
				product_date as product_date_for_ordering,
				sale_sum as sales,
				stock,
				img_path AS thumbnail_path
		FROM   `product`
				left join (select * from `product_img` where thumb_fl='Y') as `product_img` on `product`.product_no = `product_img`.product_no
				join (select sum(sell_count) sale_sum, sum(stock) stock, product_no from `option` group by product_no) as `sales` on `product`.product_no = `sales`.product_no
				<if test="pc != null or cc != null">join `product_category` on `product`.product_no = `product_category`.product_no</if>
				<if test="pc != null">join `parent_category_cd` on `product_category`.parent_category_no = `parent_category_cd`.parent_category_no</if>
				<if test="cc != null">join `child_category_cd` on `product_category`.child_category_no = `child_category_cd`.child_category_no</if>
		where 1=1
			<if test="query != null and qk == null">and (product_name like '%${query}%' or `product`.product_no like '%${query}%')</if>
			<if test="query != null and qk != null and qk.equals('name')">and product_name like '%${query}%'</if>
			<if test="query != null and qk != null and qk.equals('no')">and `product`.product_no like '%${query}%'</if>
			<if test="state != null">
				<foreach collection="state" item="s" open="and (" close=")" separator="or">
					product_state = #{s}
				</foreach>
			</if>
			<if test="pc != null">and `product_category`.parent_category_no = #{pc}</if>
			<if test="cc != null">and `product_category`.child_category_no = #{cc}</if>
		ORDER BY 
			<if test='ordering == null or ordering.isEmpty() or ordering.equals("new")'>product_date_for_ordering desc</if>
			<if test='ordering != null and ordering.equals("old")'>product_date_for_ordering</if>
			<if test='ordering != null and ordering.equals("name")'>product_name asc</if>
			<if test='ordering != null and ordering.equals("sales")'>sales desc</if>
			<if test='ordering != null and ordering.equals("stock")'>stock</if>
	</select>
	
	<!-- 전체 상품 갯수 조회 -->
	<select id="getProductCount">
		SELECT  count(*)
		FROM   `product`
				<if test="pc != null or cc != null">join `product_category` on `product`.product_no = `product_category`.product_no</if>
				<if test="pc != null">join `parent_category_cd` on `product_category`.parent_category_no = `parent_category_cd`.parent_category_no</if>
				<if test="cc != null">join `child_category_cd` on `product_category`.child_category_no = `child_category_cd`.child_category_no</if>
		where 1=1
			<if test="query != null and qk == null">and (product_name like '%${query}%' or `product`.product_no like '%${query}%')</if>
			<if test="query != null and qk != null and qk.equals('name')">and product_name like '%${query}%'</if>
			<if test="query != null and qk != null and qk.equals('no')">and `product`.product_no like '%${query}%'</if>
			<if test="state != null">
				<foreach collection="state" item="s" open="and (" close=")" separator="or">
					product_state = #{s}
				</foreach>
			</if>
			<if test="pc != null">and `product_category`.parent_category_no = #{pc}</if>
			<if test="cc != null">and `product_category`.child_category_no = #{cc}</if>
	</select>
	
	<!-- 상품 번호로 상품 정보 조회 -->
	<select id="selectProduct" resultType="Product">
		SELECT `product`.product_no,
				product_name,
				product_price,
				product_sale_price,
				product_sale,
				product_point,
				product_state,
				DATE_FORMAT(product_date, '%Y-%m-%d') AS product_date,
				click_count,
				img_path AS thumbnail_path,
				(select count(*) from `like` where  `product`.product_no = `like`.product_no) AS like_count
		FROM   `product`
				JOIN `product_img` ON `product`.product_no = `product_img`.product_no
		WHERE  `product`.product_no = ${productNo}
				AND thumb_fl  = 'Y'
				and product_state = 'O' -- 판매중
	</select>
	
	<!-- 상품 번호로 상품 정보 조회(관리자) -->
	<select id="adminSelectProduct" resultType="Product">
		SELECT `product`.product_no,
				product_name,
				product_price,
				product_sale_price,
				product_sale,
				product_point,
				product_state,
				DATE_FORMAT(product_date, '%Y-%m-%d') AS product_date,
				click_count,
				img_path AS thumbnail_path,
				(select count(*) from `like` where  `product`.product_no = `like`.product_no) AS like_count
		FROM   `product`
				JOIN `product_img` ON `product`.product_no = `product_img`.product_no
		WHERE  `product`.product_no = ${productNo}
				and thumb_fl  = 'Y'
	</select>
	
	<!-- 상품 번호 여러개로 상품 정보 조회 -->
	<select id="selectProductBySeveralKeys" resultType="Product">
		SELECT `product`.product_no,
				product_name,
				product_price,
				product_sale_price,
				product_sale,
				product_point,
				product_state,
				DATE_FORMAT(product_date, '%Y-%m-%d') AS product_date,
				click_count,
				img_path AS thumbnail_path,
				(select count(*) from `like` where  `product`.product_no = `like`.product_no) AS like_count
		FROM   `product`
				JOIN `product_img` ON `product`.product_no = `product_img`.product_no
		WHERE	thumb_fl  = 'Y'	and
			<foreach collection="likeList" item="productNo" open="(" close=")" separator="or">
				`product`.product_no = ${productNo}
    		</foreach>			
	</select>
	
	<!-- 카테고리 별 주간 판매량 순위 -->
	<select id="selectWeeklyBest" resultType="Product">
		select p.product_no,
				product_name,
				product_price,
				product_sale_price,
				product_sale,
				product_point,
				product_state,
				DATE_FORMAT(product_date, '%Y-%m-%d') AS product_date,
				img_path AS thumbnail_path,
				(SELECT count(*) FROM `like` WHERE  p.product_no = `like`.product_no) AS like_count,
				(SELECT count(*) FROM `review` WHERE p.product_no = `review`.product_no) AS review_count,
				(select sum(sell_count) from `option` where p.product_no = `option`.product_no) as sell_count
		from `product` p
				left join (
					select op.product_no as product_no, sum(`count`) as `count`
					from `order_product` op
								join `order` on `order`.order_no = op.order_no
								join `product_category` c on op.product_no = c.product_no
					where parent_category_no = ${categoryNo} and order_date > DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 7 DAY), '%Y-%m-%d')
					group by product_no
				) op on op.product_no = p.product_no 
				join `product_category` c on p.product_no = c.product_no
				JOIN `product_img` ON p.product_no = `product_img`.product_no
		where parent_category_no = ${categoryNo} and product_state = 'O' and thumb_fl = 'Y'
		order by op.`count` desc, sell_count desc, review_count desc, like_count desc, product_date desc
		limit ${limit}
	</select>
	
	<!-- 카테고리별 상품 목록 조회 -->
	<select id="selectCategoryProductList" resultType="Product">
		SELECT `product`.product_no,
				product_name,
				product_price,
				product_sale_price,
				product_sale,
				product_point,
				product_state,
				DATE_FORMAT(product_date, '%Y-%m-%d') AS product_date,
				product_date as product_date_for_ordering,
				click_count,
				img_path AS thumbnail_path,
				(SELECT count(*) FROM `like` WHERE  `product`.product_no = `like`.product_no) AS like_count,
				(SELECT count(*) FROM `review` WHERE  `product`.product_no = `review`.product_no) AS review_count
		FROM   `product`
				JOIN `product_img` ON `product`.product_no = `product_img`.product_no
				JOIN `product_category` ON `product`.product_no = `product_category`.product_no
		WHERE  thumb_fl  = 'Y'
				and product_state = 'O'
				<if test="cc lte 0">
					AND parent_category_no = ${categoryNo}
				</if>
				<if test='cc gt 0'>
					AND child_category_no = ${cc}
				</if>
		ORDER BY 
			<if test='ordering == null or ordering.isEmpty() or ordering.equals("new")'>
				product_date_for_ordering desc
			</if>
			<if test='ordering != null and ordering.equals("name")'>
				product_name asc
			</if>
			<if test='ordering != null and ordering.equals("low")'>
				product_sale_price asc
			</if>
			<if test='ordering != null and ordering.equals("high")'>
				product_sale_price desc
			</if>
			<if test='ordering != null and ordering.equals("pop")'>
				(click_count + like_count + review_count) desc
			</if>
			<if test='ordering != null and ordering.equals("rev")'>
				review_count desc
			</if>
		<if test="limit != null">
			LIMIT ${limit}
		</if>
	</select>
	
	<!-- 신규 상품 목록 조회 -->
	<select id="selectNewArrivalProductList" resultType="Product">
		SELECT `product`.product_no,
				product_name,
				product_price,
				product_sale_price,
				product_sale,
				product_point,
				product_state,
				DATE_FORMAT(product_date, '%Y-%m-%d') AS product_date,
				img_path AS thumbnail_path,
				(SELECT count(*) FROM `like` WHERE  `product`.product_no = `like`.product_no) AS like_count,
				(SELECT count(*) FROM `review` WHERE  `product`.product_no = `review`.product_no) AS review_count
		FROM   `product`
				JOIN `product_img` ON `product`.product_no = `product_img`.product_no
		WHERE  	thumb_fl  = 'Y' -- 썸네일 반드시 필요
		       	and product_state = 'O' -- 판매중
		ORDER BY product_date desc, product_sale_price desc
		LIMIT 20
	</select>
	
	<!-- 개인별 맞춤 상품 추천 -->
	<select id="selectPersonalProductList" resultType="Product">
		SELECT `product`.product_no,
				product_name,
				product_price,
				product_sale_price,
				product_sale,
				product_point,
				product_state,
				DATE_FORMAT(product_date, '%Y-%m-%d') AS product_date,
				img_path AS thumbnail_path,
				(SELECT count(*) FROM `like` WHERE  `product`.product_no = `like`.product_no) AS like_count,
				(SELECT count(*) FROM `review` WHERE  `product`.product_no = `review`.product_no) AS review_count,
				(select sum(sell_count) from `option` where `product`.product_no = `option`.product_no) as sell_count
		FROM   `product`
				JOIN `product_img` ON `product`.product_no = `product_img`.product_no
		WHERE  	thumb_fl  = 'Y' -- 썸네일 반드시 필요
				and product_state = 'O' -- 판매중
		ORDER BY sell_count desc, product_sale_price desc
		LIMIT 20
	</select>
	
	<!-- 추천 상품 -->
	<select id="selectRecommendList" resultType="Product">
		SELECT `product`.product_no,
				product_name,
				product_price,
				product_sale_price,
				product_sale,
				product_point,
				product_state,
				DATE_FORMAT(product_date, '%Y-%m-%d') AS product_date,
				click_count,
				img_path AS thumbnail_path,
				(SELECT count(*) FROM `like` WHERE  `product`.product_no = `like`.product_no) AS like_count,
				(SELECT count(*) FROM `review` WHERE  `product`.product_no = `review`.product_no) AS review_count,
				(select sum(sell_count) from `option` where `product`.product_no = `option`.product_no) as sell_count
		FROM   `product`
				JOIN `product_img` ON `product`.product_no = `product_img`.product_no
		WHERE  	thumb_fl  = 'Y' -- 썸네일 반드시 필요
				and product_state = 'O' -- 판매중
		ORDER BY sell_count desc, product_sale_price desc
		LIMIT 20
	</select>
	
	<!-- 검색 결과 조회 -->
	<select id="search" resultType="Product">
		SELECT `product`.product_no,
			    product_name,
			    product_price,
			    product_sale_price,
			    product_sale,
			    product_point,
			    product_state,
				DATE_FORMAT(product_date, '%Y-%m-%d') AS product_date,
				product_date AS product_date_for_ordering,
				click_count,
				img_path AS thumbnail_path,
				(SELECT count(*) FROM `like` WHERE  `product`.product_no = `like`.product_no) AS like_count,
				(SELECT count(*) FROM `review` WHERE  `product`.product_no = `review`.product_no) AS review_count
		FROM   `product`
				JOIN `product_img` ON `product`.product_no = `product_img`.product_no
		WHERE  	thumb_fl  = 'Y' -- 썸네일 반드시 필요
				and product_state = 'O' -- 판매중
				<if test='query != null'>
					and `product`.product_name like '%${query}%'
				</if>
		ORDER BY 
			<if test='ordering == null or ordering.isEmpty() or ordering.equals("new")'>
				product_date_for_ordering desc
			</if>
			<if test='ordering != null and ordering.equals("name")'>
				product_name asc
			</if>
			<if test='ordering != null and ordering.equals("low")'>
				product_sale_price asc
			</if>
			<if test='ordering != null and ordering.equals("high")'>
				product_sale_price desc
			</if>
			<if test='ordering != null and ordering.equals("pop")'>
				(click_count + like_count + review_count) desc
			</if>
			<if test='ordering != null and ordering.equals("rev")'>
				review_count desc
			</if>
	</select>
	
	<!-- 카테고리 별 상품 갯수 조회 -->
	<select id="getListCount">
		select 	count(*) 
		from 	`product_category` 
				join `product` on `product`.product_no = `product_category`.product_no
		where product_state = 'O'
		<if test="cc lte 0">
			AND parent_category_no = ${categoryNo}
		</if>
		<if test='cc gt 0'>
			AND child_category_no = ${cc}
		</if>
	</select>
	
	<!-- 카테고리 별 상품 갯수 조회(관리자) -->
	<select id="adminGetListCount">
		select 	count(*) 
		from 	`product_category` 
				join `product` on `product`.product_no = `product_category`.product_no
		where 1=1
		<if test="cc lte 0">
			AND parent_category_no = ${categoryNo}
		</if>
		<if test='cc gt 0'>
			AND child_category_no = ${cc}
		</if>
	</select>
	
	<!-- 검색 상품 갯수 조회 -->
	<select id="getSearchListCount">
		SELECT count(*)
		FROM   `product`
		WHERE  `product`.product_name like '%${query}%' 
				and product_state = 'O';
	</select>
	
	<!-- 상품 상태 변경 -->
	<update id="updateState">
		update `product`
		set		product_state = #{state}
		where 	product_no = ${productNo}
	</update>
	
	<!-- 선택 상품 상태 일괄 변경-->
	<update id="updateStateList">
		update `product`
		set		product_state = #{state}
		<where>
			<foreach collection="productNoList" item="productNo" separator="or">
				product_no = ${productNo}			
			</foreach>
		</where>
	</update>
	
	<!-- 상품 등록 -->
	<insert id="insertProduct" useGeneratedKeys="true" keyProperty="productNo" parameterType="Product">
		insert into `product`
		values (
			NULL,
			#{productName},
			${productPrice},
			${productSalePrice},
			${productSale},
			${productPoint},
			default,
			default,
			default
		)
	</insert>
	
	<!-- 상품 이미지 등록 -->
	<insert id="insertImageList">
		insert into `product_img`
		values
		<foreach collection="list" item="img" separator=",">
		(
			null,
			${img.productNo},
			#{img.imgPath},
			#{img.thumbFl},
			${img.imgOrder}
		)
		</foreach>
	</insert>
	
	<!-- 특정 상품에 대한 이미지 조회 -->
	<select id="selectProductImage" resultType="ProductImage">
		select 	 * 
		from 	`product_img` 
		where 	 product_no = ${productNo} 
			  	 and thumb_fl = 'N'
		order by img_order
	</select>
	
	<!-- 상품 정보 업데이트 -->
	<update id="updateProduct">
		update `product`
		set		product_name = #{productName}
		where   product_no = #{productNo}
	</update>
	
	<!-- 이미지 업데이트 -->
	<update id="updateThumbnailImage">
		update `product_img`
		set		img_path = #{imgPath}
		where   product_no = #{productNo}
		        and thumb_fl = 'Y'
	</update>
	
	<!-- 이미지 삭제 -->
	<delete id="removeProductImage">
		delete from `product_img`
		<where>
			<foreach collection="array" item="imgNo" separator="or">
				img_no = ${imgNo}
			</foreach>
		</where> 
	</delete>
	
	<!-- 이미지 db 전체 목록 조회 -->
	<select id="selectImageList">
		select SUBSTRING_INDEX(img_path, '/', -1) 
		from `product_img`;
	</select>
	
	<!-- 이미지 순서 업데이트 -->
	<update id="updateImageOrder">
		update `product_img`
		set 	img_order = ${imgOrder}
		where   img_no = ${imgNo}
	</update>
	
	<insert id="insertThumbnailImage">
		insert into `product_img`
		values (
			null,
			${productNo},
			#{imgPath},
			'Y',
			null
		)
	</insert>
	
	<!-- 상품 현황(관리자) -->
	<!-- 안전재고 미만, 판매 상품 갯수, 품절 상품 갯수, 비공개 상품 갯수 -->
	<select id="productStatistics">
		SELECT count(*)
		FROM (
			SELECT `product`.product_no, sum(stock)
			FROM `product`
				JOIN `option` ON `product`.product_no = `option`.product_no
			WHERE product_state='O'
			GROUP BY `product`.product_no
			HAVING sum(stock) <![CDATA[<]]> 10
		) tb
		UNION ALL
		SELECT count(*) FROM `product` WHERE product_state='O'
		UNION ALL
		SELECT count(*) FROM `product` WHERE product_state='S'
		UNION ALL
		SELECT count(*) FROM `product` WHERE product_state='N'
	</select>

</mapper>
